<?xml version="1.0" encoding="UTF-8"?>
<method-analyzer>
  <sinks>
    <method class-name="android.bluetooth.BluetoothSocket" name="getOutputStream" return-type="java.io.OutputStream" category="FILE"/>
    <method class-name="android.content.Intent" name="setData" return-type="android.content.Intent" category="FILE">
      <argument type="android.net.Uri"/>
    </method>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="FILE"/>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="FILE">
      <argument type="android.content.Context"/>
      <argument type="java.lang.Class"/>
    </method>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="FILE">
      <argument type="android.content.Intent"/>
    </method>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="SMS">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="SMS">
      <argument type="java.lang.String"/>
      <argument type="android.net.Uri"/>
    </method>
    <method class-name="android.content.Intent" name="Intent" return-type="android.content.Intent" category="SMS">
      <argument type="java.lang.String"/>
      <argument type="android.net.Uri"/>
      <argument type="android.content.Context"/>
      <argument type="java.lang.Class"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="T" category="SMS">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="T" category="SMS">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="T" category="SMS">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="T" category="SMS">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="SMS">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="BLUETOOTH">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="BROWSER">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
    </method>
    <method class-name="android.net.http.AndroidHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="BROWSER">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="android.provider.Browser" name="addSearchUrl" return-type="void" category="BROWSER">
      <argument type="android.content.ContentResolver"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.provider.Browser" name="saveBookmark" return-type="void" category="INTENT">
      <argument type="android.content.Context"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.provider.Browser" name="sendString" return-type="void" category="SMS">
      <argument type="android.content.Context"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.telephony.gsm.SmsManager" name="sendDataMessage" return-type="void" category="SMS">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="short"/>
      <argument type="byte[]"/>
      <argument type="android.app.PendingIntent"/>
      <argument type="Landroid.app.PendingIntent"/>
    </method>
    <method class-name="android.telephony.gsm.SmsManager" name="sendMultipartTextMessage" return-type="void" category="SMS">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.util.ArrayList"/>
      <argument type="java.util.ArrayList"/>
      <argument type="java.util.ArrayList"/>
    </method>
    <method class-name="android.telephony.gsm.SmsManager" name="sendTextMessage" return-type="void" category="INTERNET">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="android.app.PendingIntent"/>
      <argument type="android.app.PendingIntent"/>
    </method>
    <method class-name="android.telephony.gsm.SmsManager" name="sendDataMessage" return-type="void" category="INTERNET">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="short"/>
      <argument type="byte[]"/>
      <argument type="android.app.PendingIntent"/>
      <argument type="Landroid.app.PendingIntent"/>
    </method>
    <method class-name="android.telephony.gsm.SmsManager Deprecated Class" name="SmsManager" return-type="android.telephony.gsm.SmsManager Deprecated Class" category="INTERNET"/>
    <method class-name="android.telephony.SmsManager" name="SmsManager" return-type="android.telephony.SmsManager" category="Internet"/>
    <method class-name="android.telephony.SmsManager" name="sendDataMessage" return-type="void" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="short"/>
      <argument type="byte[]"/>
      <argument type="android.app.PendingIntent"/>
      <argument type="Landroid.app.PendingIntent"/>
    </method>
    <method class-name="android.telephony.SmsManager" name="sendMultipartTextMessage" return-type="void" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.util.ArrayList"/>
      <argument type="java.util.ArrayList"/>
      <argument type="java.util.ArrayList"/>
    </method>
    <method class-name="android.telephony.SmsManager" name="sendTextMessage" return-type="void" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="android.app.PendingIntent"/>
      <argument type="android.app.PendingIntent"/>
    </method>
    <method class-name="android.telephony.SmsMessage" name="getSubmitPdu" return-type="android.telephony.SmsMessage.SubmitPdu" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.telephony.SmsMessage" name="getSubmitPdu" return-type="android.telephony.SmsMessage.SubmitPdu" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="short"/>
      <argument type="byte[]"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.util.Log" name="isLoggable" return-type="boolean" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="int"/>
    </method>
    <method class-name="android.util.Log" name="d" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="d" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="e" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="e" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="i" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="i" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="println" return-type="int" category="Internet">
      <argument type="int"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="v" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="v" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="w" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="w" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="w" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="wtf" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.util.Log" name="wtf" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="wtf" return-type="int" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="getStackTraceString" return-type="java.lang.String" category="Internet">
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="android.util.Log" name="Log" return-type="android.util.Log" category="Internet"/>
    <method class-name="android.webkit.WebSettings" name="setBlockNetworkLoads" return-type="void" category="Internet">
      <argument type="boolean"/>
    </method>
    <method class-name="android.webkit.WebView" name="WebView" return-type="android.webkit.WebView" category="Internet">
      <argument type="android.content.Context"/>
    </method>
    <method class-name="android.webkit.WebView" name="WebView" return-type="android.webkit.WebView" category="Internet">
      <argument type="android.content.Context"/>
      <argument type="android.util.AttributeSet"/>
    </method>
    <method class-name="android.webkit.WebView" name="WebView" return-type="android.webkit.WebView" category="Internet">
      <argument type="android.content.Context"/>
      <argument type="android.util.AttributeSet"/>
      <argument type="int"/>
    </method>
    <method class-name="android.webkit.WebView" name="WebView" return-type="android.webkit.WebView" category="Internet">
      <argument type="android.content.Context"/>
      <argument type="android.util.AttributeSet"/>
      <argument type="int"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="FileOutputStream" return-type="java.io.FileOutputStream" category="Internet">
      <argument type="java.io.File"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="FileOutputStream" return-type="java.io.FileOutputStream" category="Internet">
      <argument type="java.io.File"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="FileOutputStream" return-type="java.io.FileOutputStream" category="Internet">
      <argument type="java.io.FileDescriptor"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="FileOutputStream" return-type="java.io.FileOutputStream" category="Internet">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="FileOutputStream" return-type="java.io.FileOutputStream" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="getFD" return-type="java.io.FileDescriptor" category="Internet"/>
    <method class-name="java.io.FileOutputStream" name="getChannel" return-type="java.nio.channels.FileChannel" category="Internet"/>
    <method class-name="java.io.FileOutputStream" name="close" return-type="void" category="Internet"/>
    <method class-name="java.io.FileOutputStream" name="finalize" return-type="void" category="Internet"/>
    <method class-name="java.io.FileOutputStream" name="write" return-type="void" category="Internet">
      <argument type="byte[]"/>
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="write" return-type="void" category="Internet">
      <argument type="int"/>
    </method>
    <method class-name="java.io.FileWriter" name="FileWriter" return-type="java.io.FileWriter" category="Internet">
      <argument type="java.io.File"/>
    </method>
    <method class-name="java.io.FileWriter" name="FileWriter" return-type="java.io.FileWriter" category="Internet">
      <argument type="java.io.File"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.FileWriter" name="FileWriter" return-type="java.io.FileWriter" category="Internet">
      <argument type="java.io.FileDescriptor"/>
    </method>
    <method class-name="java.io.FileWriter" name="FileWriter" return-type="java.io.FileWriter" category="Internet">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.io.FileWriter" name="FileWriter" return-type="java.io.FileWriter" category="Internet">
      <argument type="java.lang.String"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="write" return-type="void" category="Internet">
      <argument type="byte[]"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="write" return-type="void" category="Internet">
      <argument type="byte[]"/>
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="writeByte" return-type="void" category="Internet">
      <argument type="int"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="writeBytes" return-type="void" category="Internet">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="writeChar" return-type="void" category="Internet">
      <argument type="int"/>
    </method>
    <method class-name="java.io.RandomAccessFile" name="writeChars" return-type="void" category="Internet">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.net.DatagramSocket" name="DatagramSocket" return-type="java.net.DatagramSocket" category="Internet"/>
    <method class-name="java.net.DatagramSocket" name="DatagramSocket" return-type="java.net.DatagramSocket" category="Internet">
      <argument type="int"/>
    </method>
    <method class-name="java.net.DatagramSocket" name="DatagramSocket" return-type="java.net.DatagramSocket" category="Internet">
      <argument type="int"/>
      <argument type="java.net.InetAddress"/>
    </method>
    <method class-name="java.net.DatagramSocket" name="DatagramSocket" return-type="java.net.DatagramSocket" category="Internet">
      <argument type="java.net.DatagramSocketImpl"/>
    </method>
    <method class-name="java.net.DatagramSocket" name="DatagramSocket" return-type="java.net.DatagramSocket" category="Internet">
      <argument type="java.net.SocketAddress"/>
    </method>
    <method class-name="java.net.HttpURLConnection" name="HttpURLConnection" return-type="java.net.HttpURLConnection" category="none">
      <argument type="java.net.URL"/>
    </method>
    <method class-name="java.net.MulticastSocket" name="MulticastSocket" return-type="java.net.MulticastSocket" category="none"/>
    <method class-name="java.net.MulticastSocket" name="MulticastSocket" return-type="java.net.MulticastSocket" category="none">
      <argument type="int"/>
    </method>
    <method class-name="java.net.MulticastSocket" name="MulticastSocket" return-type="java.net.MulticastSocket" category="none">
      <argument type="java.net.SocketAddress"/>
    </method>
    <method class-name="java.net.NetworkInterface" name="NetworkInterface" return-type="java.net.NetworkInterface" category="none"/>
    <method class-name="java.net.ServerSocket" name="ServerSocket" return-type="java.net.ServerSocket" category="none"/>
    <method class-name="java.net.ServerSocket" name="ServerSocket" return-type="java.net.ServerSocket" category="none">
      <argument type="int"/>
    </method>
    <method class-name="java.net.ServerSocket" name="ServerSocket" return-type="java.net.ServerSocket" category="none">
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.ServerSocket" name="ServerSocket" return-type="java.net.ServerSocket" category="Sneaky Intent">
      <argument type="int"/>
      <argument type="int"/>
      <argument type="java.net.InetAddress"/>
    </method>
    <method class-name="java.net.ServerSocket" name="bind" return-type="void" category="Intent">
      <argument type="java.net.SocketAddress"/>
    </method>
    <method class-name="java.net.ServerSocket" name="bind" return-type="void" category="none">
      <argument type="java.net.SocketAddress"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none"/>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.lang.String"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.lang.String"/>
      <argument type="int"/>
      <argument type="java.net.InetAddress"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.lang.String"/>
      <argument type="int"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.net.InetAddress"/>
      <argument type="int"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.net.InetAddress"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.net.InetAddress"/>
      <argument type="int"/>
      <argument type="java.net.InetAddress"/>
      <argument type="int"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.net.Proxy"/>
    </method>
    <method class-name="java.net.Socket" name="Socket" return-type="java.net.Socket" category="none">
      <argument type="java.net.SocketImpl"/>
    </method>
    <method class-name="java.net.URLConnection" name="getInputStream" return-type="java.io.InputStream" category="none"/>
    <method class-name="java.net.URLConnection" name="connect" return-type="void" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isDebugEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isErrorEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isFatalEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isInfoEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isTraceEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="isWarnEnabled" return-type="boolean" category="none"/>
    <method class-name="org.apache.commons.logging.Log" name="debug" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="debug" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="error" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="error" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="fatal" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="fatal" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="info" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="info" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="trace" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="trace" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="warn" return-type="void" category="none">
      <argument type="java.lang.Object"/>
    </method>
    <method class-name="org.apache.commons.logging.Log" name="warn" return-type="void" category="none">
      <argument type="java.lang.Object"/>
      <argument type="java.lang.Throwable"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
    </method>
    <method class-name="org.apache.http.client.HttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="T" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.client.ResponseHandler"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="none">
      <argument type="org.apache.http.HttpHost"/>
      <argument type="org.apache.http.HttpRequest"/>
      <argument type="org.apache.http.protocol.HttpContext"/>
    </method>
    <method class-name="org.apache.http.impl.client.DefaultHttpClient" name="DefaultHttpClient" return-type="org.apache.http.impl.client.DefaultHttpClient" category="none"/>
    <method class-name="org.apache.http.impl.client.DefaultHttpClient" name="DefaultHttpClient" return-type="org.apache.http.impl.client.DefaultHttpClient" category="none">
      <argument type="org.apache.http.conn.ClientConnectionManager"/>
      <argument type="org.apache.http.params.HttpParams"/>
    </method>
    <method class-name="org.apache.http.impl.client.DefaultHttpClient" name="DefaultHttpClient" return-type="org.apache.http.impl.client.DefaultHttpClient" category="none">
      <argument type="org.apache.http.params.HttpParams"/>
    </method>
    <method class-name="org.apache.http.impl.client.AbstractHttpClient" name="execute" return-type="org.apache.http.HttpResponse" category="INTERNET">
      <argument type="org.apache.http.client.methods.HttpUriRequest"/>
    </method>
    <method class-name="java.net.URL" name="openConnection" return-type="java.net.URLConnection" category="INTERNET"/>
    <method class-name="java.io.DataOutputStream" name="writeBytes" return-type="void" category="WRITEOUT">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.io.DataOutputStream" name="write" return-type="void" category="WRITEOUT">
      <argument type="byte[]"/>
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="java.io.FileOutputStream" name="write" return-type="void" category="WRITEOUT">
      <argument type="byte[]"/>
    </method>
  </sinks>
  <sources>
    <method class-name="android.accounts.AccountManager" name="getAccounts" return-type="android.accounts.Account[]" category="GET_ACCOUNTS"/>
    <method class-name="android.accounts.AccountManager" name="getAccountsByType" return-type="android.accounts.Account[]" category="GET_ACCOUNTS">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.accounts.AccountManager" name="getAccountsByTypeAndFeatures" return-type="android.accounts.AccountManagerFuture" category="GET_ACCOUNTS">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String[]"/>
      <argument type="android.accounts.AccountManagerCallback"/>
      <argument type="android.os.Handler"/>
    </method>
    <method class-name="android.accounts.AccountManager" name="getAuthTokenByFeatures" return-type="android.accounts.AccountManagerFuture" category="GET_ACCOUNTS">
      <argument type="java.lang.String"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String[]"/>
      <argument type="android.app.Activity"/>
      <argument type="android.os.Bundle"/>
      <argument type="android.os.Bundle"/>
      <argument type="android.accounts.AccountManagerCallback"/>
      <argument type="android.os.Handler"/>
    </method>
    <method class-name="android.accounts.AccountManager" name="hasFeatures" return-type="android.accounts.AccountManagerFuture" category="GET_ACCOUNTS">
      <argument type="android.accounts.Account"/>
      <argument type="java.lang.String[]"/>
      <argument type="android.accounts.AccountManagerCallback"/>
      <argument type="android.os.Handler"/>
    </method>
    <method class-name="android.accounts.AccountManager" name="addOnAccountsUpdatedListener" return-type="void" category="GET_ACCOUNTS">
      <argument type="android.accounts.OnAccountsUpdateListener"/>
      <argument type="android.os.Handler"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.app.ActivityManager" name="getRecentTasks" return-type="java.util.List" category="GET_TASKS">
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="android.app.ActivityManager" name="getRunningTasks" return-type="java.util.List" category="GET_TASKS">
      <argument type="int"/>
    </method>
    <method class-name="android.content.ContentResolver" name="query" return-type="android.database.Cursor" category="READ_CONTACTS">
      <argument type="android.net.Uri"/>
      <argument type="java.lang.String[]"/>
      <argument type="java.lang.String"/>
      <argument type="java.lang.String[]"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.content.ContentResolver" name="openFileDescriptor" return-type="android.os.ParcelFileDescriptor" category="READ_CONTACTS">
      <argument type="android.net.Uri"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.content.ContentResolver" name="openInputStream" return-type="java.io.InputStream" category="READ_CONTACTS">
      <argument type="android.net.Uri"/>
    </method>
    <method class-name="android.content.ContentResolver" name="openOutputStream" return-type="java.io.OutputStream" category="READ_CONTACTS">
      <argument type="android.net.Uri"/>
    </method>
    <method class-name="android.content.ContentResolver" name="openOutputStream" return-type="java.io.OutputStream" category="READ_CONTACTS">
      <argument type="android.net.Uri"/>
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.content.Intent" name="getExtras" return-type="android.os.Bundle" category="INTENT"/>
    <method class-name="android.hardware.Camera" name="open" return-type="android.hardware.Camera" category="CAMERA"/>
    <method class-name="android.hardware.Camera" name="open" return-type="android.hardware.Camera" category="CAMERA">
      <argument type="int"/>
    </method>
    <method class-name="android.hardware.SensorEventListener" name="onAccuracyChanged" return-type="void" category="none">
      <argument type="android.hardware.Sensor"/>
      <argument type="int"/>
    </method>
    <method class-name="android.hardware.SensorEventListener" name="onSensorChanged" return-type="void" category="none">
      <argument type="android.hardware.SensorEvent"/>
    </method>
    <method class-name="android.hardware.SensorListener Deprecated" name="onAccuracyChanged" return-type="void" category="none">
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="android.hardware.SensorListener Deprecated" name="onSensorChanged" return-type="void" category="none">
      <argument type="int"/>
      <argument type="float[]"/>
    </method>
    <method class-name="android.location.Location" name="getLatitude" return-type="double" category="GEOLOCATION"/>
    <method class-name="android.location.Location" name="getLongitude" return-type="double" category="GEOLOCATION"/>
    <method class-name="android.location.LocationListener" name="onLocationChanged" return-type="void" category="GEOLOCATION">
      <argument type="android.location.Location"/>
    </method>
    <method class-name="android.location.LocationManager" name="getLastKnownLocation" return-type="android.location.Location" category="GEOLOCATION">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.location.LocationManager" name="getProvider" return-type="android.location.LocationProvider" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.location.LocationManager" name="isProviderEnabled" return-type="boolean" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="android.location.LocationManager" name="getBestProvider" return-type="java.lang.String" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="android.location.Criteria"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.location.LocationManager" name="getProviders" return-type="java.util.List" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="android.location.Criteria"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.location.LocationManager" name="getProviders" return-type="java.util.List" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="boolean"/>
    </method>
    <method class-name="android.location.LocationManager" name="requestLocationUpdates" return-type="void" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="java.lang.String"/>
      <argument type="long"/>
      <argument type="float"/>
      <argument type="android.app.PendingIntent"/>
    </method>
    <method class-name="android.location.LocationManager" name="requestLocationUpdates" return-type="void" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="java.lang.String"/>
      <argument type="long"/>
      <argument type="float"/>
      <argument type="android.location.LocationListener"/>
    </method>
    <method class-name="android.location.LocationManager" name="requestLocationUpdates" return-type="void" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="java.lang.String"/>
      <argument type="long"/>
      <argument type="float"/>
      <argument type="android.location.LocationListener"/>
      <argument type="android.os.Looper"/>
    </method>
    <method class-name="android.location.LocationManager" name="requestLocationUpdates" return-type="void" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="long"/>
      <argument type="float"/>
      <argument type="android.location.Criteria"/>
      <argument type="android.app.PendingIntent"/>
    </method>
    <method class-name="android.location.LocationManager" name="requestLocationUpdates" return-type="void" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION">
      <argument type="long"/>
      <argument type="float"/>
      <argument type="android.location.Criteria"/>
      <argument type="android.app.PendingIntent"/>
    </method>
    <method class-name="android.media.AudioRecord" name="AudioRecord" return-type="android.media.AudioRecord" category="RECORD_AUDIO">
      <argument type="int"/>
      <argument type="int"/>
      <argument type="int"/>
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="android.media.MediaRecorder" name="setAudioSource" return-type="void" category="RECORD_AUDIO">
      <argument type="int"/>
    </method>
    <method class-name="android.media.MediaRecorder" name="setVideoSource" return-type="void" category="CAMERA">
      <argument type="int"/>
    </method>
    <method class-name="android.os.DropBoxManager" name="getNextEntry" return-type="android.os.DropBoxManager.Entry" category="READ_LOGS">
      <argument type="java.lang.String"/>
      <argument type="long"/>
    </method>
    <method class-name="android.speech.SpeechRecognizer" name="cancel" return-type="void" category="RECORD_AUDIO"/>
    <method class-name="android.speech.SpeechRecognizer" name="startListening" return-type="void" category="RECORD_AUDIO">
      <argument type="android.content.Intent"/>
    </method>
    <method class-name="android.speech.SpeechRecognizer" name="stopListening" return-type="void" category="RECORD_AUDIO"/>
    <method class-name="android.telephony.cdma.CdmaCellLocation" name="getBaseStationId" return-type="int" category="GEOLOCATION"/>
    <method class-name="android.telephony.TelephonyManager" name="getCellLocation" return-type="android.telephony.CellLocation" category="GEOLOCATION"/>
    <method class-name="android.telephony.TelephonyManager" name="getDeviceId" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getDeviceSoftwareVersion" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getLine1Number" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getNetworkCountryIso" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getSimSerialNumber" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getSubscriberId" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getVoiceMailNumber" return-type="java.lang.String" category="none"/>
    <method class-name="android.telephony.TelephonyManager" name="getVoiceMailAlphaTag" return-type="java.lang.String" category="READ_PHONE_STATE"/>
    <method class-name="android.telephony.TelephonyManager" name="getNeighboringCellInfo" return-type="java.util.List" category="ACCESS_FINE_LOCATION__or__ACCESS_COARSE_LOCATION"/>
    <method class-name="android.telephony.TelephonyManager" name="incomingCallNumber" return-type="java.lang.String" category="none"/>
    <method class-name="android.view.OrientationListener Deprecated" name="onAccuracyChanged" return-type="void" category="none">
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="android.view.OrientationListener Deprecated" name="onSensorChanged" return-type="void" category="none">
      <argument type="int"/>
      <argument type="float[]"/>
    </method>
    <method class-name="android.widget.QuickContactBadge" name="assignContactFromEmail" return-type="void" category="READ_CONTACTS">
      <argument type="java.lang.String"/>
      <argument type="boolean"/>
    </method>
    <method class-name="android.widget.QuickContactBadge" name="assignContactFromPhone" return-type="void" category="READ_CONTACTS">
      <argument type="java.lang.String"/>
      <argument type="boolean"/>
    </method>
    <method class-name="java.io.FileInputStream" name="FileInputStream" return-type="java.io.FileInputStream" category="none">
      <argument type="java.io.File"/>
    </method>
    <method class-name="java.io.FileInputStream" name="FileInputStream" return-type="java.io.FileInputStream" category="none">
      <argument type="java.io.FileDescriptor"/>
    </method>
    <method class-name="java.io.FileInputStream" name="FileInputStream" return-type="java.io.FileInputStream" category="none">
      <argument type="java.lang.String"/>
    </method>
    <method class-name="java.io.FileInputStream" name="available" return-type="int" category="none"/>
    <method class-name="java.io.FileInputStream" name="read" return-type="int" category="none"/>
    <method class-name="java.io.FileInputStream" name="read" return-type="int" category="none">
      <argument type="byte[]"/>
      <argument type="int"/>
      <argument type="int"/>
    </method>
    <method class-name="java.io.FileInputStream" name="getFD" return-type="java.io.FileDescriptor" category="none"/>
    <method class-name="java.io.FileInputStream" name="getChannel" return-type="java.nio.channels.FileChannel" category="none"/>
    <method class-name="java.io.FileInputStream" name="skip" return-type="long" category="none">
      <argument type="long"/>
    </method>
    <method class-name="java.io.FileInputStream" name="close" return-type="void" category="none"/>
    <method class-name="java.io.FileInputStream" name="finalize" return-type="void" category="none"/>
    <method class-name="android.telephony.SmsMessage" name="getMessageBody" return-type="android.telephony.SmsMessage" category="CONTENT"/>
    <method class-name="android.telephony.SmsMessage" name="getOriginatingAddress" return-type="android.telephony.SmsMessage" category="CONTENT"/>
    <method class-name="android.location.Location" name="getLatitude" return-type="android.location.Location" category="CONTENT"/>
    <method class-name="android.location.Location" name="getLongitude" return-type="android.location.Location" category="CONTENT"/>
    <method class-name="android.telephony.TelephonyManager" name="getDeviceId" return-type="java.lang.String" category="READ_PHONE_STATE"/>
    <method class-name="java.io.File" name="listFiles" return-type="java.io.File[]" category="FILE"/>
    <method class-name="android.database.Cursor" name="getString" return-type="java.lang.String" category="CONTENT">
      <argument type="int"/>
    </method>
  </sources>
  <other>
  </other>
</method-analyzer>
